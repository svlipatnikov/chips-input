{"version":3,"sources":["components/ChipsItem/chipsItem.module.scss","components/ChipsInput/chipsInput.module.scss","components/AlarmMessage/alarmMessage.module.scss","assets/closeBtn.svg","components/AlarmMessage/AlarmMessage.js","components/ChipsItem/ChipsItem.js","helpers/getChipsArray.js","components/ChipsInput/index.js","components/ChipsInput/ChipsInput.js","App.js","index.js"],"names":["module","exports","_path","_path2","AlarmMessage","show","className","styles","message","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloseBtn","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","ChipsItem","value","onChange","setAlarm","useState","text","setText","chipsAlarm","setChipsAlarm","inputRef","useRef","useEffect","wrapperAlarm","wrapperNorm","input","event","onClick","stopPropagation","onBlur","split","current","focus","filter","item","join","size","closeBtn","getChipsArray","string","chips","quotesFlag","startIndex","push","substr","ChipsInput","setInput","alarm","chipsArray","useMemo","onChangeChipsArray","array","handleChipsChange","index","newValue","splice","wrapper","map","type","inputAlarm","inputNorm","placeholder","onKeyDown","setTimeout","App","setValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bdb2067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperNorm\":\"chipsItem_wrapperNorm__3z2wF\",\"wrapperAlarm\":\"chipsItem_wrapperAlarm__23v36\",\"input\":\"chipsItem_input__1idEC\",\"closeBtn\":\"chipsItem_closeBtn__2uy89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chipsInput_wrapper__3BAaU\",\"inputNorm\":\"chipsInput_inputNorm__1kYzW\",\"inputAlarm\":\"chipsInput_inputAlarm__m01fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"alarmMessage_message__1CSnM\"};","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseBtn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 8L24 24\",\n    stroke: \"#curent\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 24L24 8\",\n    stroke: \"#curent\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseBtn);\nexport default __webpack_public_path__ + \"static/media/closeBtn.1acd6236.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport styles from './alarmMessage.module.scss';\r\n\r\nconst AlarmMessage = ({ show }) => {\r\n  if (!show) return null;\r\n  return <p className={styles.message}>Закройте кавычки с двух сторон</p>;\r\n};\r\n\r\nexport default AlarmMessage;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { ReactComponent as CloseBtn } from '../../assets/closeBtn.svg';\r\nimport styles from './chipsItem.module.scss';\r\n\r\nconst ChipsItem = ({ value, onChange, setAlarm }) => {\r\n  const [text, setText] = useState(value);\r\n  const [chipsAlarm, setChipsAlarm] = useState(false);\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setAlarm(chipsAlarm);\r\n  }, [chipsAlarm, setAlarm]);\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n    setChipsAlarm(false);\r\n    !event.target.value && onChange('');\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (text.split('\"').length % 2 === 0) {\r\n      setChipsAlarm(true);\r\n      inputRef.current.focus();\r\n    } else if (text !== value) {\r\n      onChange(\r\n        text\r\n          .split(',')\r\n          .filter((item) => !!item)\r\n          .join()\r\n      );\r\n      setText(\r\n        text\r\n          .split(',')\r\n          .filter((item) => !!item)\r\n          .join()\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onChange('');\r\n    if (chipsAlarm) setAlarm(false);\r\n  };\r\n\r\n  return (\r\n    <div className={chipsAlarm ? styles.wrapperAlarm : styles.wrapperNorm}>\r\n      <input\r\n        className={styles.input}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        size={text.length + 2 || 1}\r\n        ref={inputRef}\r\n      />\r\n\r\n      <button className={styles.closeBtn} onClick={handleClose}>\r\n        <CloseBtn />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChipsItem;\r\n","const getChipsArray = (string) => {\r\n  if (!string.length) return [];\r\n\r\n  const chips = [];\r\n  let quotesFlag = false;\r\n  let startIndex = 0;\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === '\"') quotesFlag = !quotesFlag;\r\n    if (string[i] === ',') {\r\n      if (startIndex === i) {\r\n        startIndex = i + 1;\r\n      } else if (!quotesFlag) {\r\n        chips.push(string.substr(startIndex, i - startIndex));\r\n        startIndex = i + 1;\r\n      }\r\n    }\r\n  }\r\n  if (startIndex < string.length) {\r\n    chips.push(string.substr(startIndex, string.length - startIndex));\r\n  }\r\n\r\n  return chips;\r\n};\r\n\r\nexport default getChipsArray;\r\n","import ChipsInput from './ChipsInput';\r\n\r\nexport default ChipsInput;\r\n","import React, { useMemo, useRef, useState } from 'react';\r\nimport AlarmMessage from '../AlarmMessage/AlarmMessage';\r\nimport ChipsItem from '../ChipsItem/ChipsItem';\r\nimport getChipsArray from '../../helpers/getChipsArray';\r\nimport styles from './chipsInput.module.scss';\r\n\r\nconst ChipsInput = ({ value, onChange }) => {\r\n  const inputRef = useRef(null);\r\n  const [input, setInput] = useState('');\r\n  const [alarm, setAlarm] = useState(false);\r\n\r\n  const chipsArray = useMemo(() => getChipsArray(value), [value]);\r\n\r\n  const onChangeChipsArray = (array) => {\r\n    if (array.length) {\r\n      onChange(array.join());\r\n    } else {\r\n      onChange('');\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    inputRef.current.focus();\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    setInput(event.target.value);\r\n    if (alarm) {\r\n      setAlarm(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === ',' && input.split('\"').length % 2 === 1) {\r\n      setTimeout(() => {\r\n        if (input.length) {\r\n          value ? onChange(value + ',' + input) : onChange(input);\r\n        }\r\n        setInput('');\r\n      });\r\n    } else if (!input.length && (event.key === 'Backspace' || event.key === 'Delete')) {\r\n      chipsArray.splice(chipsArray.length - 1, 1);\r\n      onChangeChipsArray(chipsArray);\r\n    }\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (input.length) {\r\n      if (input.split('\"').length % 2 === 1) {\r\n        value ? onChange(value + ',' + input) : onChange(input);\r\n        setInput('');\r\n      } else {\r\n        inputRef.current.focus();\r\n        setAlarm(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChipsChange = (index) => (newValue) => {\r\n    newValue ? (chipsArray[index] = newValue) : chipsArray.splice(index, 1);\r\n    onChangeChipsArray(chipsArray);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper} onClick={handleClick}>\r\n        {chipsArray.map((chips, index) => (\r\n          <ChipsItem\r\n            key={chips + index}\r\n            value={chips}\r\n            onChange={handleChipsChange(index)}\r\n            setAlarm={setAlarm}\r\n          />\r\n        ))}\r\n\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          value={input}\r\n          className={alarm ? styles.inputAlarm : styles.inputNorm}\r\n          placeholder={value ? '' : 'Введите ключевые слова'}\r\n          size={value ? input.length + 1 : 22}\r\n          onChange={handleInput}\r\n          onKeyDown={handleKeyDown}\r\n          onBlur={handleBlur}\r\n        />\r\n      </div>\r\n\r\n      <AlarmMessage show={alarm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChipsInput;\r\n","import React, { useState } from 'react';\nimport ChipsInput from './components/ChipsInput';\nimport './App.css';\n\nfunction App() {\n  const [value, setValue] = useState('');\n\n  return (\n    <div className=\"App\">\n      <ChipsInput value={value} onChange={setValue} />\n      <h5>Строковое представление:</h5>\n      <div>{value}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}