{"version":3,"sources":["components/ChipsItem/chipsItem.module.scss","components/ChipsInput/chipsInput.module.scss","components/AlarmMessage/alarmMessage.module.scss","App.module.scss","assets/closeBtn.svg","components/AlarmMessage/AlarmMessage.js","helpers/isChipsSelected.js","components/ChipsItem/ChipsItem.js","helpers/getChipsArray.js","components/ChipsInput/index.js","components/ChipsInput/ChipsInput.js","App.js","index.js"],"names":["module","exports","_path","_path2","AlarmMessage","show","className","styles","message","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloseBtn","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","ForwardRef","isChipsSelected","selection","chipsPosition","left","right","top","bottom","xStart","yStart","xEnd","yEnd","ChipsItem","value","onChange","setAlarm","index","useState","text","setText","chipsAlarm","setChipsAlarm","inputRef","useRef","wrapperRef","current","getBoundingClientRect","chipsSelect","useMemo","isDelPressed","useEffect","chipsStyle","cn","wrapper","wrapperAlarm","wrapperSelect","input","event","onClick","stopPropagation","onBlur","split","focus","filter","item","join","size","closeBtn","closeBtnSelect","React","memo","getChipsArray","string","chips","quotesFlag","startIndex","push","substr","ChipsInput","setInput","alarm","isSelected","setSelection","chipsArray","handleChipsChange","useCallback","newValue","handleKeyDown","handleMouseDown","pageX","pageY","handleMouseMove","Math","abs","handleMouseUp","window","addEventListener","removeEventListener","map","type","inputAlarm","placeholder","onKeyDown","splice","App","setValue","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3cf201c4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chipsItem_wrapper__2GXXe\",\"wrapperAlarm\":\"chipsItem_wrapperAlarm__23v36\",\"wrapperSelect\":\"chipsItem_wrapperSelect__3zWv3\",\"input\":\"chipsItem_input__1idEC\",\"closeBtn\":\"chipsItem_closeBtn__2uy89\",\"closeBtnSelect\":\"chipsItem_closeBtnSelect__1cDeq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"chipsInput_wrapper__3BAaU\",\"input\":\"chipsInput_input__2c3UR\",\"inputAlarm\":\"chipsInput_inputAlarm__m01fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"alarmMessage_message__1CSnM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__3bSEP\"};","var _path, _path2;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseBtn(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 20,\n    height: 20,\n    viewBox: \"0 0 32 32\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 8L24 24\",\n    stroke: \"#curent\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 24L24 8\",\n    stroke: \"#curent\",\n    strokeWidth: 4,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseBtn);\nexport default __webpack_public_path__ + \"static/media/closeBtn.a54ed575.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport styles from './alarmMessage.module.scss';\r\n\r\nconst AlarmMessage = ({ show }) => {\r\n  if (!show) return null;\r\n  return <p className={styles.message}>Закройте кавычки с двух сторон</p>;\r\n};\r\n\r\nexport default AlarmMessage;\r\n","const isChipsSelected = (selection, chipsPosition) => {\r\n  if (!chipsPosition) return false;\r\n\r\n  const { left, right, top, bottom } = chipsPosition;\r\n  const { xStart, yStart, xEnd, yEnd } = selection;\r\n\r\n  // начало выделения ниже чипса\r\n  if (yStart > bottom) {\r\n    if (yEnd > bottom) return false;\r\n    if (yEnd <= bottom && yEnd >= top) return xEnd < right;\r\n    if (yEnd < top) return true;\r\n  }\r\n\r\n  // начало выделения внутри чипса (по высоте)\r\n  if (yStart <= bottom && yStart >= top) {\r\n    if (yEnd < top) return xStart > left;\r\n    if (yEnd >= top && yEnd <= bottom) {\r\n      if (xStart > xEnd) return xStart > right && xEnd < right;\r\n      if (xStart <= xEnd) return xEnd > left && xStart < left;\r\n    }\r\n    if (yEnd > bottom) return xStart < right;\r\n  }\r\n\r\n  // начало выделения выше чипса\r\n  if (yStart < top) {\r\n    if (yEnd < top) return false;\r\n    if (yEnd >= top && yEnd <= bottom) return xEnd > left;\r\n    if (yEnd > bottom) return true;\r\n  }\r\n};\r\n\r\nexport default isChipsSelected;\r\n","import React, { useState, useRef, useEffect, useMemo } from 'react';\r\nimport { ReactComponent as CloseBtn } from '../../assets/closeBtn.svg';\r\nimport cn from 'classnames';\r\nimport styles from './chipsItem.module.scss';\r\nimport isChipsSelected from '../../helpers/isChipsSelected';\r\n\r\nconst ChipsItem = ({ value, onChange, setAlarm, selection, index }) => {\r\n  const [text, setText] = useState(value);\r\n  const [chipsAlarm, setChipsAlarm] = useState(false);\r\n  const inputRef = useRef(null);\r\n  const wrapperRef = useRef(null);\r\n\r\n  let chipsPosition = null;\r\n  if (wrapperRef && wrapperRef.current) {\r\n    chipsPosition = wrapperRef.current.getBoundingClientRect();\r\n  }\r\n\r\n  const chipsSelect = useMemo(() => isChipsSelected(selection, chipsPosition), [\r\n    chipsPosition,\r\n    selection,\r\n  ]);\r\n\r\n  if (selection.isDelPressed && chipsSelect) {\r\n    onChange('', index);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setAlarm(chipsAlarm);\r\n  }, [chipsAlarm, setAlarm]);\r\n\r\n  const handleChange = (event) => {\r\n    setText(event.target.value);\r\n    setChipsAlarm(false);\r\n    !event.target.value && onChange('', index);\r\n  };\r\n\r\n  const handleClick = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (text.split('\"').length % 2 === 0) {\r\n      setChipsAlarm(true);\r\n      inputRef.current.focus();\r\n    } else if (text !== value) {\r\n      onChange(\r\n        text\r\n          .split(',')\r\n          .filter((item) => !!item)\r\n          .join(),\r\n        index\r\n      );\r\n      setText(\r\n        text\r\n          .split(',')\r\n          .filter((item) => !!item)\r\n          .join()\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    onChange('', index);\r\n    chipsAlarm && setAlarm(false);\r\n  };\r\n\r\n  const chipsStyle = cn({\r\n    [styles.wrapper]: true,\r\n    [styles.wrapperAlarm]: chipsAlarm,\r\n    [styles.wrapperSelect]: chipsSelect,\r\n  });\r\n\r\n  return (\r\n    <div className={chipsStyle} ref={wrapperRef}>\r\n      <input\r\n        className={styles.input}\r\n        value={text}\r\n        onChange={handleChange}\r\n        onClick={handleClick}\r\n        onBlur={handleBlur}\r\n        size={text.length + 2}\r\n        ref={inputRef}\r\n      />\r\n\r\n      <button\r\n        className={cn({ [styles.closeBtn]: true, [styles.closeBtnSelect]: chipsSelect })}\r\n        onClick={handleClose}\r\n      >\r\n        <CloseBtn />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(ChipsItem);\r\n","const getChipsArray = (string) => {\r\n  if (!string.length) return [];\r\n\r\n  const chips = [];\r\n  let quotesFlag = false;\r\n  let startIndex = 0;\r\n\r\n  for (let i = 0; i < string.length; i++) {\r\n    if (string[i] === '\"') quotesFlag = !quotesFlag;\r\n    if (string[i] === ',') {\r\n      if (startIndex === i) {\r\n        startIndex = i + 1;\r\n      } else if (!quotesFlag) {\r\n        chips.push(string.substr(startIndex, i - startIndex));\r\n        startIndex = i + 1;\r\n      }\r\n    }\r\n  }\r\n  if (startIndex < string.length) {\r\n    chips.push(string.substr(startIndex, string.length - startIndex));\r\n  }\r\n\r\n  return chips;\r\n};\r\n\r\nexport default getChipsArray;\r\n","import ChipsInput from './ChipsInput';\r\n\r\nexport default ChipsInput;\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport AlarmMessage from '../AlarmMessage/AlarmMessage';\r\nimport ChipsItem from '../ChipsItem/ChipsItem';\r\nimport getChipsArray from '../../helpers/getChipsArray';\r\nimport cn from 'classnames';\r\nimport styles from './chipsInput.module.scss';\r\n\r\nconst ChipsInput = ({ value, onChange }) => {\r\n  const inputRef = useRef(null);\r\n  const [input, setInput] = useState('');\r\n  const [alarm, setAlarm] = useState(false);\r\n  const [selection, setSelection] = useState({\r\n    isSelected: false,\r\n    isDelPressed: false,\r\n    xStart: 0,\r\n    yStart: 0,\r\n    xEnd: 0,\r\n    yEnd: 0,\r\n  });\r\n\r\n  const chipsArray = useMemo(() => getChipsArray(value), [value]);\r\n\r\n  const handleWrapperClick = () => {\r\n    if (selection.xStart === selection.xEnd && selection.yStart === selection.yEnd) {\r\n      inputRef.current.focus();\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (event) => {\r\n    if (event.target.value.split(',').length === 1) {\r\n      setInput(event.target.value);\r\n    }\r\n    alarm && setAlarm(false);\r\n  };\r\n\r\n  const handleInputBlur = () => {\r\n    if (input.length) {\r\n      if (input.split('\"').length % 2 === 1) {\r\n        value ? onChange(value + ',' + input) : onChange(input);\r\n        setInput('');\r\n      } else {\r\n        inputRef.current.focus();\r\n        setAlarm(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === ',' && input.length > 1 && input.split('\"').length % 2 === 1) {\r\n      value ? onChange(value + ',' + input) : onChange(input);\r\n      setInput('');\r\n    } else if (!input.length && (event.key === 'Backspace' || event.key === 'Delete')) {\r\n      chipsArray.splice(chipsArray.length - 1, 1);\r\n      chipsArray.length ? onChange(chipsArray.filter((item) => !!item).join()) : onChange('');\r\n    }\r\n  };\r\n\r\n  const handleChipsChange = useCallback(\r\n    (newValue, index) => {\r\n      !newValue &&\r\n        setSelection({\r\n          isDelPressed: false,\r\n          isSelected: false,\r\n          xStart: 0,\r\n          yStart: 0,\r\n          xEnd: 0,\r\n          yEnd: 0,\r\n        });\r\n      chipsArray[index] = newValue;\r\n      onChange(chipsArray.filter((item) => !!item).join());\r\n    },\r\n    [chipsArray, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (event) => {\r\n      if (event.key === 'Delete') {\r\n        setSelection((selection) => ({ ...selection, isDelPressed: true }));\r\n      }\r\n    };\r\n\r\n    const handleMouseDown = (event) => {\r\n      setSelection((selection) => ({\r\n        ...selection,\r\n        isSelected: true,\r\n        xStart: event.pageX,\r\n        yStart: event.pageY,\r\n        xEnd: event.pageX,\r\n        yEnd: event.pageY,\r\n      }));\r\n    };\r\n\r\n    const handleMouseMove = (event) => {\r\n      setSelection((selection) => {\r\n        if (\r\n          selection.isSelected &&\r\n          (Math.abs(event.pageX - selection.xEnd) > 10 ||\r\n            Math.abs(event.pageY - selection.yEnd) > 10)\r\n        )\r\n          return {\r\n            ...selection,\r\n            xEnd: event.pageX,\r\n            yEnd: event.pageY,\r\n          };\r\n        return selection;\r\n      });\r\n    };\r\n\r\n    const handleMouseUp = () => {\r\n      setSelection((selection) => ({ ...selection, isSelected: false }));\r\n    };\r\n\r\n    window.addEventListener('mouseup', handleMouseUp);\r\n    window.addEventListener('mousedown', handleMouseDown);\r\n    window.addEventListener('mousemove', handleMouseMove);\r\n    window.addEventListener('keydown', handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener('mouseup', handleMouseUp);\r\n      window.removeEventListener('mousedown', handleMouseDown);\r\n      window.removeEventListener('mousemove', handleMouseMove);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.wrapper} onClick={handleWrapperClick}>\r\n        {chipsArray.map((chips, index) => (\r\n          <ChipsItem\r\n            key={chips + index}\r\n            value={chips}\r\n            index={index}\r\n            onChange={handleChipsChange}\r\n            setAlarm={setAlarm}\r\n            selection={selection}\r\n          />\r\n        ))}\r\n\r\n        <input\r\n          type=\"text\"\r\n          ref={inputRef}\r\n          value={input}\r\n          className={cn({\r\n            [styles.input]: true,\r\n            [styles.inputAlarm]: alarm,\r\n          })}\r\n          placeholder={value ? '' : 'Введите ключевые слова'}\r\n          size={value ? input.length + 1 : 22}\r\n          onChange={handleInputChange}\r\n          onKeyDown={handleKeyDown}\r\n          onBlur={handleInputBlur}\r\n        />\r\n      </div>\r\n\r\n      <AlarmMessage show={alarm} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChipsInput;\r\n","import React, { useState } from 'react';\r\nimport ChipsInput from './components/ChipsInput';\r\nimport styles from './App.module.scss';\r\n\r\nfunction App() {\r\n  const [value, setValue] = useState('');\r\n\r\n  return (\r\n    <div className={styles.app}>\r\n      <ChipsInput value={value} onChange={setValue} />\r\n      <h5>Строковое представление:</h5>\r\n      <div> {`\"${value}\"`} </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}